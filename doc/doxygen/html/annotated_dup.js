var annotated_dup =
[
    [ "hdg", "namespacehdg.html", [
      [ "BinaryOperatorNode", "classhdg_1_1_binary_operator_node.html", "classhdg_1_1_binary_operator_node" ],
      [ "CallNode", "classhdg_1_1_call_node.html", "classhdg_1_1_call_node" ],
      [ "Environment", "classhdg_1_1_environment.html", "classhdg_1_1_environment" ],
      [ "Error", "classhdg_1_1_error.html", "classhdg_1_1_error" ],
      [ "Float", "classhdg_1_1_float.html", "classhdg_1_1_float" ],
      [ "ForNode", "classhdg_1_1_for_node.html", "classhdg_1_1_for_node" ],
      [ "FuncObjNode", "classhdg_1_1_func_obj_node.html", "classhdg_1_1_func_obj_node" ],
      [ "Function", "classhdg_1_1_function.html", "classhdg_1_1_function" ],
      [ "IfNode", "classhdg_1_1_if_node.html", "classhdg_1_1_if_node" ],
      [ "IllegalCharError", "classhdg_1_1_illegal_char_error.html", "classhdg_1_1_illegal_char_error" ],
      [ "Indicator", "structhdg_1_1_indicator.html", "structhdg_1_1_indicator" ],
      [ "Integer", "classhdg_1_1_integer.html", "classhdg_1_1_integer" ],
      [ "Interpreter", "classhdg_1_1_interpreter.html", "classhdg_1_1_interpreter" ],
      [ "InvalidSyntaxError", "classhdg_1_1_invalid_syntax_error.html", "classhdg_1_1_invalid_syntax_error" ],
      [ "Lexer", "classhdg_1_1_lexer.html", "classhdg_1_1_lexer" ],
      [ "List", "classhdg_1_1_list.html", null ],
      [ "Node", "classhdg_1_1_node.html", "classhdg_1_1_node" ],
      [ "None", "classhdg_1_1_none.html", "classhdg_1_1_none" ],
      [ "NotImplementedError", "classhdg_1_1_not_implemented_error.html", null ],
      [ "NumObjNode", "classhdg_1_1_num_obj_node.html", "classhdg_1_1_num_obj_node" ],
      [ "ObjAccessNode", "classhdg_1_1_obj_access_node.html", "classhdg_1_1_obj_access_node" ],
      [ "ObjAssignNode", "classhdg_1_1_obj_assign_node.html", "classhdg_1_1_obj_assign_node" ],
      [ "Object", "classhdg_1_1_object.html", "classhdg_1_1_object" ],
      [ "ObjectNode", "classhdg_1_1_object_node.html", "classhdg_1_1_object_node" ],
      [ "Parser", "classhdg_1_1_parser.html", "classhdg_1_1_parser" ],
      [ "Position", "classhdg_1_1_position.html", "classhdg_1_1_position" ],
      [ "RuntimeError", "classhdg_1_1_runtime_error.html", "classhdg_1_1_runtime_error" ],
      [ "Shell", "classhdg_1_1_shell.html", "classhdg_1_1_shell" ],
      [ "StatementsNode", "classhdg_1_1_statements_node.html", "classhdg_1_1_statements_node" ],
      [ "String", "classhdg_1_1_string.html", "classhdg_1_1_string" ],
      [ "StrObjNode", "classhdg_1_1_str_obj_node.html", "classhdg_1_1_str_obj_node" ],
      [ "Token", "classhdg_1_1_token.html", "classhdg_1_1_token" ],
      [ "UnaryOperatorNode", "classhdg_1_1_unary_operator_node.html", "classhdg_1_1_unary_operator_node" ],
      [ "WhileNode", "classhdg_1_1_while_node.html", "classhdg_1_1_while_node" ]
    ] ]
];